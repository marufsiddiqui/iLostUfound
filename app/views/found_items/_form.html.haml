= form_for [current_user,@found_item], :html => { :class => 'form-horizontal' } do |f|
  - if @found_item.errors.any?
    #error_explanation
      %h2= "#{pluralize(@found_item.errors.count, "error")} prohibited this found_item from being saved:"
      %ul
        - @found_item.errors.full_messages.each do |msg|
          %li= msg

  .control-group
    = f.label :name, :class => 'control-label'
    .controls
      = f.text_field :name, :class => 'text'

  .control-group
    = f.label :address, :class => 'control-label'
    .controls
      = f.text_area :address, :class => 'textarea', :rows => 5

  .control-group
    = f.label :cell, :class => 'control-label'
    .controls
      = f.text_field :cell, :class => 'text'

  .control-group
    = f.label :found_item, :class => 'control-label'
    .controls
      = f.text_field :found_item, :class => 'text'

  .control-group
    = f.label :description, :class => 'control-label'
    .controls
      = f.text_area :description, :class => 'textarea', :rows => 5    

  .control-group
    = f.label :found_location, :class => 'control-label'
    .controls
      = f.text_area :found_location, :class => 'textarea', :rows => 5

  .control-group
    = f.label :found_date, :class => 'control-label'
    .controls
      = f.text_field :found_date, :class => 'text'

  .control-group
    = f.label :found_item_pic, :class => 'control-label'
    .controls
      = f.file_field :found_item_pic, :class => 'file'

  .control-group
    = f.label :email, :class => 'control-label'
    .controls
      = f.text_field :email, :value => current_user.email, :readonly => true, :class => 'text'

  .control-group
    = f.label :additional_contact, :class => 'control-label'
    .controls
      = f.text_area :additional_contact, :class => 'textarea', :rows => 5

  .form-actions
    = f.submit 'Save', :class => 'btn btn-primary'


:javascript
  $(function(){
    $("#found_item_found_date").datepicker({dateFormat: 'dd-mm-yy'});

    $(".form-horizontal").isHappy({
      fields : {
        "#found_item_name" :{
          required : true,
          message  : "You must enter your name"  
        },
        "#found_item_address" :{
          required : true,
          message  : "You must give your address"
        },
        "#found_item_cell" :{
          required : true,
          message  : "You must give your cell no"
        },
        "#found_item_found_item" :{
          required : true,
          message  : "You must tell what you have found"
        },
        "#found_item_found_location" :{
          required :true,
          message  : "You must tell where you have found your item"
        },
        "#found_item_found_date" :{
          required : true,
          message  : "You must tell when you found the item",
          test     : function(val1){
            var date_array = val1.split("-");
            var date_only = date_array[2].split("-")
            var date = new Date(date_array[2],(date_array[1]-1),date_array[0]);
            var today = new Date();
            if (date.getTime() > today.getTime()){return false;}
            else {return true;}
          }
        },
        "#found_item_email" :{
          required : true,
          message  : "You must give a valid email address",
          test     : happy.email
        }
      }
    });
  });    
